{"mappings":"ACSA,MAAM,EAAO,EAAE,CAEf,eAAe,EAAc,CAAG,CAAE,CAAO,CAAE,CAAW,CAAE,CAAK,EAC3D,GAAI,CACF,IAAM,EAAW,MAAM,MAAM,EAAK,GAE5B,EAAW,AADJ,CAAA,MAAM,EAAS,IAAI,EAAhC,EACsB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAG,GAEvC,EAAY,SAAS,aAAa,CAAC,EACzC,CAAA,EAAU,SAAS,CAAG,GAEtB,EAAS,OAAO,CAAC,AAAC,IAChB,IAAM,EAAO,SAAS,aAAa,CAAC,OACpC,EAAK,SAAS,CAAC,GAAG,CAChB,SACA,WACA,WACA,WACA,OACA,SACA,0BAEF,EAAK,SAAS,CAAG,CAAC;;oBAEJ,EAAE,EAAQ,aAAa,CAAC,4BAA4B,EAAE,EAAQ,aAAa,CAAC;;mDAE7C,EAAE,EAAQ,aAAa,CAAC;kCACzC,EAAE,EAAQ,aAAa,CAAC;+FACqC,EAAE,EAAQ,UAAU,CAAC,sBAAsB,EAAE,EAAQ,aAAa,CAAC,sBAAsB,EAAE,EAAQ,aAAa,CAAC,sBAAsB,EAAE,EAAQ,aAAa,CAAC;;;MAGxP,CAAC,CACD,EAAU,WAAW,CAAC,EACxB,GAEA,SAAS,gBAAgB,CAAC,gBAAgB,OAAO,CAAC,AAAA,IAChD,EAAO,gBAAgB,CAAC,QAAS,AAAC,IAChC,IAAM,EAAU,CACd,GAAI,EAAE,MAAM,CAAC,OAAO,CAAC,SAAS,CAC9B,MAAO,EAAE,MAAM,CAAC,OAAO,CAAC,YAAY,CACpC,MAAO,EAAE,MAAM,CAAC,OAAO,CAAC,YAAY,CACpC,MAAO,EAAE,MAAM,CAAC,OAAO,CAAC,YAAY,CACpC,SAAU,CACZ,EACA,AAQR,CAAA,SAAmB,CAAO,EACxB,IAAM,EAAuB,EAAK,SAAS,CAAC,AAAA,GAAQ,EAAK,EAAE,GAAK,EAAQ,EAAE,CAEtE,CAAA,EAAuB,GACzB,CAAI,CAAC,EAAqB,CAAC,QAAQ,EAAI,EAEvC,EAAK,IAAI,CAAC,GAGZ,AAGF,SAAS,IACP,IAAM,EAAqB,SAAS,cAAc,CAAC,aACnD,CAAA,EAAmB,SAAS,CAAG,GAE/B,IAAI,EAAQ,EAEZ,EAAK,OAAO,CAAC,CAAC,EAAS,KACrB,GAAS,WAAW,EAAQ,KAAK,CAAC,OAAO,CAAC,KAAM,IAAI,OAAO,CAAC,IAAK,MAAQ,EAAQ,QAAQ,CACzF,IAAM,EAAW,SAAS,aAAa,CAAC,OACxC,EAAS,SAAS,CAAC,GAAG,CAAC,aACvB,EAAS,SAAS,CAAG,CAAC;;kBAER,EAAE,EAAQ,KAAK,CAAC,6BAA6B,EAAE,EAAQ,KAAK,CAAC;;2BAEpD,EAAE,EAAQ,KAAK,CAAC;8CACA,EAAE,EAAQ,KAAK,CAAC;;;;kFAIuB,EAAE,EAAM;qGACW,EAAE,EAAM,SAAS,EAAE,EAAQ,QAAQ,CAAC;;IAErI,CAAC,CACD,EAAmB,WAAW,CAAC,EACjC,GAGA,aAAa,OAAO,CAAC,WAAY,EAAM,OAAO,CAAC,IAE/C,IAAM,EAAiB,SAAS,aAAa,CAAC,OAC9C,EAAe,SAAS,CAAC,GAAG,CAAC,SAAU,0BAA2B,WAClE,EAAe,SAAS,CAAG,CAAC;;YAElB,EAAE,EAAM,OAAO,CAAC,GAAG,OAAO,CAAC,IAAK,KAAK;EAC/C,CAAC,CACD,EAAmB,WAAW,CAAC,GAE/B,SAAS,gBAAgB,CAAC,eAAe,OAAO,CAAC,AAAA,IAC/C,EAAO,gBAAgB,CAAC,QAAS,AAAC,QAkBd,EAAA,EAjBH,EAAE,MAAM,CAAC,OAAO,CAAC,YAAY,CAkBhD,EAAK,MAAM,CAAC,EAAc,GAC1B,GAlBE,EACF,GAEA,SAAS,gBAAgB,CAAC,mBAAmB,OAAO,CAAC,AAAA,IACnD,EAAM,gBAAgB,CAAC,SAAU,AAAC,QAiBd,EAAc,EAAd,EAhBH,EAAE,MAAM,CAAC,OAAO,CAAC,YAAY,CAgBZ,EAhBc,EAAE,MAAM,CAAC,KAAK,CAiBhE,CAAI,CAAC,EAAa,CAAC,QAAQ,CAAG,SAAS,GACvC,GAjBE,EACF,GAGK,SAAS,cAAc,CAAC,eAAe,SAAS,CAAC,QAAQ,CAAC,SAE7D,AADmB,IAAI,UAAU,SAAS,CAAC,SAAS,cAAc,CAAC,gBACxD,IAAI,EAEnB,GAxDA,CAAA,EAlBkB,EACZ,EACF,EACF,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,EAChB,CACF,CAoFA,MAAM,EAAO,CACX,YAAa,CAAC,EAAE,QAAQ,4BAAyB,CAAC,CAClD,UAAW,CAAC,EAAE,QAAQ,0BAAuB,CAAC,CAC9C,cAAe,CAAC,EAAE,QAAQ,8BAA8B,CAAC,CACzD,UAAW,CAAC,EAAE,QAAQ,uBAAuB,CAAC,CAC9C,cAAe,CAAC,EAAE,QAAQ,2BAA2B,CAAC,AACxD,EAGA,EAAc,EAAK,WAAW,CAAE,QAAS,2BAZjB,GAaxB,EAAc,EAAK,SAAS,CAAE,QAAS,yBAbf,GAcxB,EAAc,EAAK,aAAa,CAAE,QAAS,8BAdnB,GAexB,EAAc,EAAK,SAAS,CAAE,QAAS,yBAff,GAgBxB,EAAc,EAAK,aAAa,CAAE,QAAS,6BAhBnB","sources":["<anon>","app/index.js"],"sourcesContent":["// const baseUrl = 'https://real-time-amazon-data.p.rapidapi.com/search?query=Suplementos&page=1&country=BR&sort_by=RELEVANCE&product_condition=ALL';\n// const options = {\n// \tmethod: 'GET',\n// \theaders: {\n// \t\t'x-rapidapi-key': '85fdc2806cmsh055f6bb467f9ff6p18b3bfjsnc43d7b4c190b',\n// \t\t'x-rapidapi-host': 'real-time-amazon-data.p.rapidapi.com'\n// \t}\n// };\nconst cart = [];\nasync function fetchProducts(url, options1, containerId, limit) {\n    try {\n        const response = await fetch(url, options1);\n        const data = await response.json();\n        const products = data.data.products.slice(0, limit);\n        const container = document.querySelector(containerId);\n        container.innerHTML = \"\";\n        products.forEach((product)=>{\n            const card = document.createElement(\"div\");\n            card.classList.add(\"col-12\", \"col-sm-6\", \"col-md-4\", \"col-lg-3\", \"mb-3\", \"d-flex\", \"justify-content-center\");\n            card.innerHTML = `\r\n        <div class=\"card h-100 card-prod border-1 border-white shadow\">\r\n          <img src=\"${product.product_photo}\" class=\"card-img-top\" alt=\"${product.product_title}\">\r\n          <div class=\"card-body d-flex flex-column\">\r\n            <h5 class=\"card-title card-title-prod\">${product.product_title}</h5>\r\n            <p class=\"price-prod\">${product.product_price}</p>\r\n            <button type=\"button\" class=\"btn btn-success mt-auto comprar-btn\" data-product-id=\"${product.product_id}\" data-product-title=\"${product.product_title}\" data-product-price=\"${product.product_price}\" data-product-photo=\"${product.product_photo}\">Comprar</button>\r\n          </div>\r\n        </div>\r\n      `;\n            container.appendChild(card);\n        });\n        document.querySelectorAll(\".comprar-btn\").forEach((button)=>{\n            button.addEventListener(\"click\", (e)=>{\n                const product = {\n                    id: e.target.dataset.productId,\n                    title: e.target.dataset.productTitle,\n                    price: e.target.dataset.productPrice,\n                    photo: e.target.dataset.productPhoto,\n                    quantity: 1\n                };\n                addToCart(product);\n            });\n        });\n    } catch (error) {\n        console.error(error);\n    }\n}\nfunction addToCart(product) {\n    const existingProductIndex = cart.findIndex((item)=>item.id === product.id);\n    if (existingProductIndex > -1) cart[existingProductIndex].quantity += 1;\n    else cart.push(product);\n    updateCart();\n}\nfunction updateCart() {\n    const cartItemsContainer = document.getElementById(\"cart-items\");\n    cartItemsContainer.innerHTML = \"\";\n    let total = 0;\n    cart.forEach((product, index)=>{\n        total += parseFloat(product.price.replace(\"R$\", \"\").replace(\",\", \".\")) * product.quantity;\n        const cartItem = document.createElement(\"div\");\n        cartItem.classList.add(\"cart-item\");\n        cartItem.innerHTML = `\r\n      <div class=\"d-flex align-items-center\">\r\n        <img src=\"${product.photo}\" class=\"img-thumbnail\" alt=\"${product.title}\">\r\n        <div class=\"cart-item-details\">\r\n          <h6 class=\"mb-0\">${product.title}</h6>\r\n          <small class=\"text-muted\">Pre\\xe7o: ${product.price}</small>\r\n        </div>\r\n      </div>\r\n      <div class=\"cart-item-controls\">\r\n        <button class=\"btn btn-sm btn-danger me-2 remove-btn\" data-product-index=\"${index}\">Excluir</button>\r\n        <input type=\"number\" class=\"form-control form-control-sm quantity-input\" data-product-index=\"${index}\" value=\"${product.quantity}\" min=\"1\">\r\n      </div>\r\n    `;\n        cartItemsContainer.appendChild(cartItem);\n    });\n    // Salva o subtotal no localStorage\n    localStorage.setItem(\"subtotal\", total.toFixed(2));\n    const totalContainer = document.createElement(\"div\");\n    totalContainer.classList.add(\"d-flex\", \"justify-content-between\", \"fw-bold\");\n    totalContainer.innerHTML = `\r\n    <span>Subtotal</span>\r\n    <span>R$${total.toFixed(2).replace(\".\", \",\")}</span>\r\n  `;\n    cartItemsContainer.appendChild(totalContainer);\n    document.querySelectorAll(\".remove-btn\").forEach((button)=>{\n        button.addEventListener(\"click\", (e)=>{\n            removeFromCart(e.target.dataset.productIndex);\n        });\n    });\n    document.querySelectorAll(\".quantity-input\").forEach((input)=>{\n        input.addEventListener(\"change\", (e)=>{\n            updateQuantity(e.target.dataset.productIndex, e.target.value);\n        });\n    });\n    // Garantir que o offcanvas só seja exibido uma vez e não interfira na exibição da tela\n    if (!document.getElementById(\"cart-canvas\").classList.contains(\"show\")) {\n        const cartCanvas = new bootstrap.Offcanvas(document.getElementById(\"cart-canvas\"));\n        cartCanvas.show();\n    }\n}\nfunction removeFromCart(productIndex) {\n    cart.splice(productIndex, 1);\n    updateCart();\n}\nfunction updateQuantity(productIndex, quantity) {\n    cart[productIndex].quantity = parseInt(quantity);\n    updateCart();\n}\n// Defina o número máximo de cartões por sessão\nconst limitPerSession = 3;\n// URLs específicas para cada categoria de suplemento\nconst urls = {\n    aminoacidos: `${baseUrl}&query=Amino\\xe1cidos&page=1`,\n    proteinas: `${baseUrl}&query=Prote\\xednas&page=1`,\n    massaMuscular: `${baseUrl}&query=Massa%20Muscular&page=1`,\n    vitaminas: `${baseUrl}&query=Vitaminas&page=1`,\n    emagrecimento: `${baseUrl}&query=Emagrecimento&page=1`\n};\n// Chamada da função para preencher os cards de cada seção com os produtos da API\nfetchProducts(urls.aminoacidos, options, \"#suplementos-aminoacidos\", limitPerSession);\nfetchProducts(urls.proteinas, options, \"#suplementos-proteinas\", limitPerSession);\nfetchProducts(urls.massaMuscular, options, \"#suplementos-massa-muscular\", limitPerSession);\nfetchProducts(urls.vitaminas, options, \"#suplementos-vitaminas\", limitPerSession);\nfetchProducts(urls.emagrecimento, options, \"#suplementos-emagrecimento\", limitPerSession);\n\n//# sourceMappingURL=index.4555cb15.js.map\n","// const baseUrl = 'https://real-time-amazon-data.p.rapidapi.com/search?query=Suplementos&page=1&country=BR&sort_by=RELEVANCE&product_condition=ALL';\r\n// const options = {\r\n// \tmethod: 'GET',\r\n// \theaders: {\r\n// \t\t'x-rapidapi-key': '85fdc2806cmsh055f6bb467f9ff6p18b3bfjsnc43d7b4c190b',\r\n// \t\t'x-rapidapi-host': 'real-time-amazon-data.p.rapidapi.com'\r\n// \t}\r\n// };\r\n\r\nconst cart = [];\r\n\r\nasync function fetchProducts(url, options, containerId, limit) {\r\n  try {\r\n    const response = await fetch(url, options);\r\n    const data = await response.json();\r\n    const products = data.data.products.slice(0, limit);\r\n\r\n    const container = document.querySelector(containerId);\r\n    container.innerHTML = \"\";\r\n\r\n    products.forEach((product) => {\r\n      const card = document.createElement(\"div\");\r\n      card.classList.add(\r\n        \"col-12\",\r\n        \"col-sm-6\",\r\n        \"col-md-4\",\r\n        \"col-lg-3\",\r\n        \"mb-3\",\r\n        \"d-flex\",\r\n        \"justify-content-center\"\r\n      );\r\n      card.innerHTML = `\r\n        <div class=\"card h-100 card-prod border-1 border-white shadow\">\r\n          <img src=\"${product.product_photo}\" class=\"card-img-top\" alt=\"${product.product_title}\">\r\n          <div class=\"card-body d-flex flex-column\">\r\n            <h5 class=\"card-title card-title-prod\">${product.product_title}</h5>\r\n            <p class=\"price-prod\">${product.product_price}</p>\r\n            <button type=\"button\" class=\"btn btn-success mt-auto comprar-btn\" data-product-id=\"${product.product_id}\" data-product-title=\"${product.product_title}\" data-product-price=\"${product.product_price}\" data-product-photo=\"${product.product_photo}\">Comprar</button>\r\n          </div>\r\n        </div>\r\n      `;\r\n      container.appendChild(card);\r\n    });\r\n\r\n    document.querySelectorAll('.comprar-btn').forEach(button => {\r\n      button.addEventListener('click', (e) => {\r\n        const product = {\r\n          id: e.target.dataset.productId,\r\n          title: e.target.dataset.productTitle,\r\n          price: e.target.dataset.productPrice,\r\n          photo: e.target.dataset.productPhoto,\r\n          quantity: 1\r\n        };\r\n        addToCart(product);\r\n      });\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nfunction addToCart(product) {\r\n  const existingProductIndex = cart.findIndex(item => item.id === product.id);\r\n\r\n  if (existingProductIndex > -1) {\r\n    cart[existingProductIndex].quantity += 1;\r\n  } else {\r\n    cart.push(product);\r\n  }\r\n\r\n  updateCart();\r\n}\r\n\r\nfunction updateCart() {\r\n  const cartItemsContainer = document.getElementById(\"cart-items\");\r\n  cartItemsContainer.innerHTML = \"\";\r\n\r\n  let total = 0;\r\n\r\n  cart.forEach((product, index) => {\r\n    total += parseFloat(product.price.replace('R$', '').replace(',', '.')) * product.quantity;\r\n    const cartItem = document.createElement(\"div\");\r\n    cartItem.classList.add(\"cart-item\");\r\n    cartItem.innerHTML = `\r\n      <div class=\"d-flex align-items-center\">\r\n        <img src=\"${product.photo}\" class=\"img-thumbnail\" alt=\"${product.title}\">\r\n        <div class=\"cart-item-details\">\r\n          <h6 class=\"mb-0\">${product.title}</h6>\r\n          <small class=\"text-muted\">Preço: ${product.price}</small>\r\n        </div>\r\n      </div>\r\n      <div class=\"cart-item-controls\">\r\n        <button class=\"btn btn-sm btn-danger me-2 remove-btn\" data-product-index=\"${index}\">Excluir</button>\r\n        <input type=\"number\" class=\"form-control form-control-sm quantity-input\" data-product-index=\"${index}\" value=\"${product.quantity}\" min=\"1\">\r\n      </div>\r\n    `;\r\n    cartItemsContainer.appendChild(cartItem);\r\n  });\r\n\r\n  // Salva o subtotal no localStorage\r\n  localStorage.setItem('subtotal', total.toFixed(2));\r\n\r\n  const totalContainer = document.createElement(\"div\");\r\n  totalContainer.classList.add(\"d-flex\", \"justify-content-between\", \"fw-bold\");\r\n  totalContainer.innerHTML = `\r\n    <span>Subtotal</span>\r\n    <span>R$${total.toFixed(2).replace('.', ',')}</span>\r\n  `;\r\n  cartItemsContainer.appendChild(totalContainer);\r\n\r\n  document.querySelectorAll('.remove-btn').forEach(button => {\r\n    button.addEventListener('click', (e) => {\r\n      removeFromCart(e.target.dataset.productIndex);\r\n    });\r\n  });\r\n\r\n  document.querySelectorAll('.quantity-input').forEach(input => {\r\n    input.addEventListener('change', (e) => {\r\n      updateQuantity(e.target.dataset.productIndex, e.target.value);\r\n    });\r\n  });\r\n\r\n  // Garantir que o offcanvas só seja exibido uma vez e não interfira na exibição da tela\r\n  if (!document.getElementById('cart-canvas').classList.contains('show')) {\r\n    const cartCanvas = new bootstrap.Offcanvas(document.getElementById('cart-canvas'));\r\n    cartCanvas.show();\r\n  }\r\n}\r\n\r\nfunction removeFromCart(productIndex) {\r\n  cart.splice(productIndex, 1);\r\n  updateCart();\r\n}\r\n\r\nfunction updateQuantity(productIndex, quantity) {\r\n  cart[productIndex].quantity = parseInt(quantity);\r\n  updateCart();\r\n}\r\n\r\n// Defina o número máximo de cartões por sessão\r\nconst limitPerSession = 3;\r\n\r\n// URLs específicas para cada categoria de suplemento\r\nconst urls = {\r\n  aminoacidos: `${baseUrl}&query=Aminoácidos&page=1`,\r\n  proteinas: `${baseUrl}&query=Proteínas&page=1`,\r\n  massaMuscular: `${baseUrl}&query=Massa%20Muscular&page=1`,\r\n  vitaminas: `${baseUrl}&query=Vitaminas&page=1`,\r\n  emagrecimento: `${baseUrl}&query=Emagrecimento&page=1`\r\n};\r\n\r\n// Chamada da função para preencher os cards de cada seção com os produtos da API\r\nfetchProducts(urls.aminoacidos, options, \"#suplementos-aminoacidos\", limitPerSession);\r\nfetchProducts(urls.proteinas, options, \"#suplementos-proteinas\", limitPerSession);\r\nfetchProducts(urls.massaMuscular, options, \"#suplementos-massa-muscular\", limitPerSession);\r\nfetchProducts(urls.vitaminas, options, \"#suplementos-vitaminas\", limitPerSession);\r\nfetchProducts(urls.emagrecimento, options, \"#suplementos-emagrecimento\", limitPerSession);\r\n"],"names":["cart","fetchProducts","url","options1","containerId","limit","response","fetch","products","data","json","slice","container","document","querySelector","innerHTML","forEach","product","card","createElement","classList","add","product_photo","product_title","product_price","product_id","appendChild","querySelectorAll","button","addEventListener","e","id","target","dataset","productId","title","productTitle","price","productPrice","photo","productPhoto","quantity","addToCart","existingProductIndex","findIndex","item","push","updateCart","cartItemsContainer","getElementById","total","index","parseFloat","replace","cartItem","localStorage","setItem","toFixed","totalContainer","productIndex","splice","input","value","parseInt","contains","cartCanvas","bootstrap","Offcanvas","show","error","console","urls","aminoacidos","baseUrl","proteinas","massaMuscular","vitaminas","emagrecimento","options"],"version":3,"file":"index.4555cb15.js.map"}